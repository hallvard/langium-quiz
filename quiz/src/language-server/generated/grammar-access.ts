/******************************************************************************
 * This file was generated by langium-cli 0.1.0.
 * DO NOT EDIT MANUALLY!
 ******************************************************************************/

import { Action, Assignment, Keyword, RuleCall, GrammarAccess } from 'langium';
import * as path from 'path';

export type QuizRuleAccess = {
    QuizKeyword: Keyword;
    name: Assignment;
    nameIDRuleCall: RuleCall;
    title: Assignment;
    titleSTRINGRuleCall: RuleCall;
    parts: Assignment;
    partsQuizPartRuleCall: RuleCall;
}

export type QuizPartRuleAccess = {
    PartKeyword: Keyword;
    name: Assignment;
    nameIDRuleCall: RuleCall;
    title: Assignment;
    titleSTRINGRuleCall: RuleCall;
    questions: Assignment;
    questionsQARuleCall: RuleCall;
}

export type QARuleAccess = {
    name: Assignment;
    nameIDRuleCall: RuleCall;
    q: Assignment;
    qQuestionRuleCall: RuleCall;
    QuestionMarkKeyword: Keyword;
    a: Assignment;
    aAnswerRuleCall: RuleCall;
}

export type QuestionRuleAccess = {
    StringQuestionRuleCall: RuleCall;
    XmlQuestionRuleCall: RuleCall;
}

export type StringQuestionRuleAccess = {
    question: Assignment;
    questionSTRINGRuleCall: RuleCall;
}

export type XmlQuestionRuleAccess = {
    xml: Assignment;
    xmlXmlRuleCall: RuleCall;
}

export type AnswerRuleAccess = {
    OptionAnswerRuleCall: RuleCall;
    OptionsAnswerRuleCall: RuleCall;
}

export type OptionAnswerRuleAccess = {
    SimpleAnswerRuleCall: RuleCall;
    XmlAnswerRuleCall: RuleCall;
}

export type SimpleAnswerRuleAccess = {
    StringAnswerRuleCall: RuleCall;
    RegexAnswerRuleCall: RuleCall;
    NumberAnswerRuleCall: RuleCall;
    BooleanAnswerRuleCall: RuleCall;
}

export type StringAnswerRuleAccess = {
    value: Assignment;
    valueIDRuleCall: RuleCall;
    valueSTRINGRuleCall: RuleCall;
    regexp: Assignment;
    u126Keyword: Keyword;
    lower: Assignment;
    UnderscoreKeyword: Keyword;
}

export type RegexAnswerRuleAccess = {
    SlashKeyword: Keyword;
    value: Assignment;
    valueSTRINGRuleCall: RuleCall;
}

export type NumberAnswerRuleAccess = {
    value: Assignment;
    valueINTRuleCall: RuleCall;
}

export type BooleanAnswerRuleAccess = {
    BooleanAnswerAction: Action;
    value: Assignment;
    YesKeyword: Keyword;
    NoKeyword: Keyword;
}

export type XmlAnswerRuleAccess = {
    xml: Assignment;
    xmlXmlRuleCall: RuleCall;
}

export type OptionsAnswerRuleAccess = {
    SingleOptionsAnswerRuleCall: RuleCall;
    ManyOptionsAnswerRuleCall: RuleCall;
}

export type OptionRuleAccess = {
    SingleBoxOptionRuleCall: RuleCall;
    SingleListOptionRuleCall: RuleCall;
    ManyOptionRuleCall: RuleCall;
}

export type SingleOptionsAnswerRuleAccess = {
    SingleBoxOptionsAnswerRuleCall: RuleCall;
    SingleListOptionsAnswerRuleCall: RuleCall;
}

export type SingleBoxOptionsAnswerRuleAccess = {
    options: Assignment;
    optionsSingleBoxOptionRuleCall: RuleCall;
}

export type SingleBoxOptionRuleAccess = {
    ParenthesisOpenKeyword: Keyword;
    DashKeyword: Keyword;
    correct: Assignment;
    XKeyword: Keyword;
    VKeyword: Keyword;
    ParenthesisCloseKeyword: Keyword;
    option: Assignment;
    optionOptionAnswerRuleCall: RuleCall;
}

export type SingleListOptionsAnswerRuleAccess = {
    options: Assignment;
    optionsSingleListOptionRuleCall: RuleCall;
}

export type SingleListOptionRuleAccess = {
    DashKeyword: Keyword;
    correct: Assignment;
    XKeyword: Keyword;
    VKeyword: Keyword;
    option: Assignment;
    optionOptionAnswerRuleCall: RuleCall;
}

export type ManyOptionsAnswerRuleAccess = {
    options: Assignment;
    optionsManyOptionRuleCall: RuleCall;
}

export type ManyOptionRuleAccess = {
    BracketOpenKeyword: Keyword;
    DashKeyword: Keyword;
    correct: Assignment;
    XKeyword: Keyword;
    VKeyword: Keyword;
    BracketCloseKeyword: Keyword;
    option: Assignment;
    optionOptionAnswerRuleCall: RuleCall;
}

export type XmlRuleAccess = {
    LessThanLessThanKeyword: Keyword;
    element: Assignment;
    elementXmlElementRuleCall: RuleCall;
    MoreThanMoreThanKeyword: Keyword;
}

export type XmlContentsRuleAccess = {
    element: Assignment;
    elementXmlElementRuleCall: RuleCall;
    post: Assignment;
    postXML_TEXTRuleCall: RuleCall;
}

export type XmlElementRuleAccess = {
    XmlPIAnswerElementRuleCall: RuleCall;
    XmlTagElementRuleCall: RuleCall;
}

export type XmlPIAnswerElementRuleAccess = {
    QuestionMarkKeyword: Keyword;
    answer: Assignment;
    answerSimpleAnswerRuleCall: RuleCall;
}

export type XmlTagElementRuleAccess = {
    startTag: Assignment;
    startTagXmlTagRuleCall: RuleCall;
    SlashKeyword: Keyword;
    pre: Assignment;
    preXML_TEXTRuleCall: RuleCall;
    contents: Assignment;
    contentsXmlContentsRuleCall: RuleCall;
    endTag: Assignment;
    endTagIDRuleCall: RuleCall;
}

export type XmlTagRuleAccess = {
    name: Assignment;
    nameIDRuleCall: RuleCall;
    attributes: Assignment;
    attributesXmlAttributeRuleCall: RuleCall;
}

export type XmlAttributeRuleAccess = {
    name: Assignment;
    nameIDRuleCall: RuleCall;
    EqualsKeyword: Keyword;
    value: Assignment;
    valueSTRINGRuleCall: RuleCall;
}

export class QuizGrammarAccess extends GrammarAccess {
    Quiz = this.buildAccess<QuizRuleAccess>('Quiz');
    QuizPart = this.buildAccess<QuizPartRuleAccess>('QuizPart');
    QA = this.buildAccess<QARuleAccess>('QA');
    Question = this.buildAccess<QuestionRuleAccess>('Question');
    StringQuestion = this.buildAccess<StringQuestionRuleAccess>('StringQuestion');
    XmlQuestion = this.buildAccess<XmlQuestionRuleAccess>('XmlQuestion');
    Answer = this.buildAccess<AnswerRuleAccess>('Answer');
    OptionAnswer = this.buildAccess<OptionAnswerRuleAccess>('OptionAnswer');
    SimpleAnswer = this.buildAccess<SimpleAnswerRuleAccess>('SimpleAnswer');
    StringAnswer = this.buildAccess<StringAnswerRuleAccess>('StringAnswer');
    RegexAnswer = this.buildAccess<RegexAnswerRuleAccess>('RegexAnswer');
    NumberAnswer = this.buildAccess<NumberAnswerRuleAccess>('NumberAnswer');
    BooleanAnswer = this.buildAccess<BooleanAnswerRuleAccess>('BooleanAnswer');
    XmlAnswer = this.buildAccess<XmlAnswerRuleAccess>('XmlAnswer');
    OptionsAnswer = this.buildAccess<OptionsAnswerRuleAccess>('OptionsAnswer');
    Option = this.buildAccess<OptionRuleAccess>('Option');
    SingleOptionsAnswer = this.buildAccess<SingleOptionsAnswerRuleAccess>('SingleOptionsAnswer');
    SingleBoxOptionsAnswer = this.buildAccess<SingleBoxOptionsAnswerRuleAccess>('SingleBoxOptionsAnswer');
    SingleBoxOption = this.buildAccess<SingleBoxOptionRuleAccess>('SingleBoxOption');
    SingleListOptionsAnswer = this.buildAccess<SingleListOptionsAnswerRuleAccess>('SingleListOptionsAnswer');
    SingleListOption = this.buildAccess<SingleListOptionRuleAccess>('SingleListOption');
    ManyOptionsAnswer = this.buildAccess<ManyOptionsAnswerRuleAccess>('ManyOptionsAnswer');
    ManyOption = this.buildAccess<ManyOptionRuleAccess>('ManyOption');
    Xml = this.buildAccess<XmlRuleAccess>('Xml');
    XmlContents = this.buildAccess<XmlContentsRuleAccess>('XmlContents');
    XmlElement = this.buildAccess<XmlElementRuleAccess>('XmlElement');
    XmlPIAnswerElement = this.buildAccess<XmlPIAnswerElementRuleAccess>('XmlPIAnswerElement');
    XmlTagElement = this.buildAccess<XmlTagElementRuleAccess>('XmlTagElement');
    XmlTag = this.buildAccess<XmlTagRuleAccess>('XmlTag');
    XmlAttribute = this.buildAccess<XmlAttributeRuleAccess>('XmlAttribute');

    constructor() {
        super(path.join(__dirname, 'grammar.json'));
    }
}
